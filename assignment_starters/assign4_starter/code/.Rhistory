theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "black", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "black", lineheight = 0.9),
axis.ticks = element_line(color = "black", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "black", margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(size = base_size, color = "black", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "#ffffff"),
legend.key = element_rect(color = "black",  fill = "#ffffff"),
legend.key.size = unit(2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "black"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "black"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "#ffffff", color  =  NA),
panel.border = element_rect(fill = NA, color = "black"),
panel.grid.major = element_line(color = "#ffffff"),
panel.grid.minor = element_line(color = "#ffffff"),
panel.spacing = unit(2, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "black"),
strip.text.y = element_text(size = base_size*0.8, color = "black",angle = -90),
# Specify plot options
plot.background = element_rect(color = "#ffffff", fill = "#ffffff"),
plot.title = element_text(size = base_size*1.2, color = "black"),
plot.margin = unit(rep(1, 4), "lines")
)
### load tidyverse
library(tidyverse)
### Custom palette & theme
# Many palettes available online, can customize
# these are from: https://colorbrewer2.org/#type=qualitative&scheme=Set1&n=9
dspn_palette <- c("#377eb8","#e41a1c","#4daf4a","#984ea3","#ff7f00")
# This is the basic function I use for all the ggplots I create.
# Modified from this black themed ggplot function: https://gist.github.com/jslefche/eff85ef06b4705e6efbc
dspn_theme = function(base_size = 24, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "black", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "black", lineheight = 0.9),
axis.ticks = element_line(color = "black", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "black", margin = margin(10, 0, 0, 0)),
axis.title.y = element_text(size = base_size, color = "black", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "#ffffff"),
legend.key = element_rect(color = "black",  fill = "#ffffff"),
legend.key.size = unit(2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "black"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "black"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "#ffffff", color  =  NA),
panel.border = element_rect(fill = NA, color = "black"),
panel.grid.major = element_line(color = "#ffffff"),
panel.grid.minor = element_line(color = "#ffffff"),
panel.spacing = unit(2, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "black"),
strip.text.y = element_text(size = base_size*0.8, color = "black",angle = -90),
# Specify plot options
plot.background = element_rect(color = "#ffffff", fill = "#ffffff"),
plot.title = element_text(size = base_size*1.2, color = "black"),
plot.margin = unit(rep(1, 4), "lines")
)
}
### Loading data + mutating to create task and timing vars
# loading the data
file <- '../data/group_bold.txt'
df <- read_tsv(file)
# setting up new vars
# Coding some new variables
# 1. Participant ID
# 2. Task (rest, or doing a task)
# 3. Timing (first two runs = early, second two runs+rest = late)
df <- df %>%
mutate(pid = str_sub(bids_name,1,3),
task = ifelse(grepl('run',bids_name),'task','rest'))
